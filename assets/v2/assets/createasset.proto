// Maintainers, please refer to the style guide here:
//     https://developers.google.com/protocol-buffers/docs/style
syntax = "proto3";
package archivist.v2;
option go_package="github.com/datatrails/go-datatrails-common-api-gen/assets/v2/assets;assets";

import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "assets/v2/assets/enums.proto";
import "attribute/v2/attribute/attribute.proto";


message CreateAssetRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        json_schema: {
            description: "This describes the body of a request to create new DataTrails Asset."
        }
        example:"{ "
            "\"behaviours\": [\"RecordEvidence\"], "
            "\"attributes\": { "
            "   \"arc_firmware_version\": \"3.2.1\", "
            "   \"arc_attachments\": ["
            "       {"
            "           \"arc_attachment_identity\": \"blobs/1754b920-cf20-4d7e-9d36-9ed7d479744d\","
            "           \"arc_hash_value\": \"01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b\","
            "           \"arc_display_name\": \"Picture from yesterday\","
            "           \"arc_hash_alg\": \"sha256\""
            "       }"
            "   ],"
            "   \"arc_home_location_identity\": \"locations/42054f10-9952-4c10-a082-9fd0d10295ae\""
            "}, "
            "\"proof_mechanism\": \"SIMPLE_HASH\","
            "\"public\": false"
            "}"
    };

    // list of enabled behaviours
    repeated string behaviours = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "list of behaviours enabled for this asset"
            max_length: 1024
        },
        (validate.rules).repeated.items.string.max_len = 1024
    ];

    // event attributes for the assets creation
    map<string, Attribute> attributes = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "key value mapping of event attributes"
            max_length: 1024
        },
        // non-empty with no cntrl chars, no '.' and does not end with '[]'
        (validate.rules).map.keys.string = {
            not_contains: ".",
            min_len: 1,
            max_len: 1024,
            pattern: "^[^[:cntrl:]]*?[^[[:cntrl:]]+?[^[:cntrl:]]$|^[^[:cntrl:]]$|^[^[:cntrl:]]*?[^][:cntrl:]]$"
        }
    ];

    // XXX: #4483 DEPRECATED use proof_mechanism
    StorageIntegrity storage_integrity = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "DEPRECATED use proof_mechanism"
            // see https://github.com/grpc-ecosystem/grpc-gateway/blob/master/protoc-gen-openapiv2/options/openapiv2.proto
            //  for specific types.
            type: STRING
        },
        (validate.rules).enum.defined_only = true
    ];

    // mechanism for evidential proof for Events on this Asset
    ProofMechanism proof_mechanism = 4 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "specify the mechanism used to provide evidential proof for Events on this Asset"
            // see https://github.com/grpc-ecosystem/grpc-gateway/blob/master/protoc-gen-openapiv2/options/openapiv2.proto
            //  for specific types.
            type: STRING
        },
        (validate.rules).enum.defined_only = true
    ];

    string chain_id = 5 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "chain id of the blockchain associated with this asset"
            max_length: 1024
        },
        (validate.rules).string.max_len = 1024
    ];

    bool public = 6 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "Public asset. A public asset and all its events are visible to the general public."
                "Sharing to specific organisations is not available for public assets."
        }
    ];
}