name: ci
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag to find in the upstream and replace here, the default is latest'
        required: false
        default: 'latest'

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      ORG: datatrails
      REPO: go-datatrails-common-api
      ARTIFACT: go-datatrails-common-api.tar.gz
      COMMIT_EMAIL: ci@github.datatrails.ai
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Resolve TAG
        run: |
          if [[ "$TAG" == "latest" ]]; then
            echo "::info ::resolving tag ..."
            TAG=$(curl -sL https://api.github.com/repos/${ORG}/${REPO}/releases/latest |
              jq -r ".tag_name")
          fi
          echo "::info ::resolved tag: $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV
        env:
          TAG: ${{ inputs.tag }}

      - uses: actions/checkout@v4
        with:
          path: repo

      - name: Update the sources
        run: |
          echo "TAG=$TAG"
          # Note that it is not forced. only non hidden files and directories
          # are removed.

          # WARNING: top level files must be removed by hand if the are
          # introduced by the archive and later removed.
          # Current top level files are just:
          #  go.mod
          #  go.sum
          for dd in $(ls -d repo/*/); do rm -r $dd; done

          gh --repo $ORG/$REPO release download $TAG \
            -p 'go-datatrails-common-api-gen.tar.gz'
          tar -zxf go-datatrails-common-api-gen.tar.gz

          pushd repo
          cp -r ../go-datatrails-common-api-gen/* .
          git status
          if ! git diff --exit-code
            echo "::warning :: no changes found"
            exit 1
          fi

      # We don't, as a matter of policy, lint generated code. Any deep tests on
      # the api generation should be done in go-datatrails-common-api. This is
      # just a simple check for completely broken source
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Build the sources
        working-directory: repo
        run: |
          go build -v ./...
          go test ./...

      - name: Commit the updates
        working-directory: repo
        run: |
          git config --global user.name 'CI Workflow'
          git config --global user.email $COMMIT_EMAIL
          git commit -am "feat: updated to go-datatrails-common-api@$TAG"
          git push

      - name: Release the updates
        working-directory: repo
        run: |
          gh release create \
            --latest \
            --generate-notes \
            --t "feat: updated to go-datatrails-common-api@$TAG"
